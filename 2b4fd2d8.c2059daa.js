(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{170:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return p}));var r=n(2),a=n(11),i=(n(0),n(243)),o={id:"first-cron",title:"Your first Cron"},s={id:"first-cron",isDocsHomePage:!1,title:"Your first Cron",description:'Now that we\'re storing requests, we can use a scheduled job (a "Cron", named',source:"@site/docs/first-cron.md",permalink:"/docs/first-cron"},c=[],l={rightToc:c};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,'Now that we\'re storing requests, we can use a scheduled job (a "Cron", named\nafter the Unix cron utility) to create a report of all requests per day.'),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Hit the plus (",Object(i.b)("inlineCode",{parentName:"li"},"+"),") button (or use the omnibox) to create a new Cron. Set it\nto run daily, and with the name ",Object(i.b)("inlineCode",{parentName:"li"},"DailyReport"),".")),Object(i.b)("p",null,Object(i.b)("img",Object(r.a)({parentName:"p"},{src:"assets/gettingstarted/crondaily.png",alt:"assets/gettingstarted/crondaily.png"}))),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"To know if a request was executed today, we compare it to the current time.\nLet's assign the current time in seconds to a variable ",Object(i.b)("inlineCode",{parentName:"p"},"timeSeconds"),". The\ncurrent time in seconds is ",Object(i.b)("inlineCode",{parentName:"p"},"Date::now"),", piped into ",Object(i.b)("inlineCode",{parentName:"p"},"Date::toSeconds"),". (Note:\nto create a pipe, type ",Object(i.b)("inlineCode",{parentName:"p"},"|>")," after the ",Object(i.b)("inlineCode",{parentName:"p"},"Date::now")," function)."),Object(i.b)("p",{parentName:"li"},"Run the ",Object(i.b)("inlineCode",{parentName:"p"},"Date::now")," function to see a live value for your code."))),Object(i.b)("p",null,Object(i.b)("img",Object(r.a)({parentName:"p"},{src:"assets/gettingstarted/cron_timeseconds.png",alt:"assets/gettingstarted/cron_timeseconds.png"}))),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},"Next, we'll need to filter the reports to just today's reports. Set\n",Object(i.b)("inlineCode",{parentName:"li"},"allRequests")," to ",Object(i.b)("inlineCode",{parentName:"li"},"DB::getAll Requests"),". Run the function to the live value\nfor ",Object(i.b)("inlineCode",{parentName:"li"},"allRequests"),".")),Object(i.b)("p",null,Object(i.b)("img",Object(r.a)({parentName:"p"},{src:"assets/gettingstarted/allrequests.png",alt:"assets/gettingstarted/allrequests.png"}))),Object(i.b)("ol",{start:4},Object(i.b)("li",{parentName:"ol"},"To see only today's requests, use ",Object(i.b)("inlineCode",{parentName:"li"},"List::filter"),". ",Object(i.b)("inlineCode",{parentName:"li"},"List::filter")," takes two\narguments - the list to filter (in this case ",Object(i.b)("inlineCode",{parentName:"li"},"allRequests"),") and an anonymous\nfunction that determines if each element of the list element should be\nincludes in the new list. ",Object(i.b)("inlineCode",{parentName:"li"},"List::filter")," is similar to ",Object(i.b)("inlineCode",{parentName:"li"},"List::map")," and the\nconcept is explained in more detail\n",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://darklang.github.io/docs/functional-aspects"}),"here"),".")),Object(i.b)("p",null,Object(i.b)("img",Object(r.a)({parentName:"p"},{src:"assets/gettingstarted/listfilter.png",alt:"assets/gettingstarted/listefilter.png"}))),Object(i.b)("ol",{start:5},Object(i.b)("li",{parentName:"ol"},"We want to keep only reports that occurred today, meaning we want to compare\nthe report's time to ",Object(i.b)("inlineCode",{parentName:"li"},"timeSeconds")," that we created earlier. Let's convert the\ntime of the request into seconds so that both times have the same units.")),Object(i.b)("p",null,Object(i.b)("img",Object(r.a)({parentName:"p"},{src:"assets/gettingstarted/requestseconds.png",alt:"assets/gettingstarted/requestseconds.png"}))),Object(i.b)("ol",{start:6},Object(i.b)("li",{parentName:"ol"},"Next, we calculate the difference from the current time; this tells us if it\nhappened today (in the last 86,400 seconds).")),Object(i.b)("p",null,Object(i.b)("img",Object(r.a)({parentName:"p"},{src:"assets/gettingstarted/comparison.png",alt:"assets/gettingstarted/comparison.png"}))),Object(i.b)("ol",{start:7},Object(i.b)("li",{parentName:"ol"},"To see this work, it's helpful to have a recent request. If you paused in the\ntutorial, re-run the ",Object(i.b)("inlineCode",{parentName:"li"},"HttpClient::post")," function from the REPL. Then, when\nyou place your cursor in ",Object(i.b)("inlineCode",{parentName:"li"},"todayRequests")," or ",Object(i.b)("inlineCode",{parentName:"li"},"List::filter")," you'll see a list\nof requests from the last 24 hours.")),Object(i.b)("p",null,Object(i.b)("img",Object(r.a)({parentName:"p"},{src:"assets/gettingstarted/todayrequest.png",alt:"assets/gettingstarted/todayrequest.png"}))),Object(i.b)("ol",{start:8},Object(i.b)("li",{parentName:"ol"},"Finally, let's emit today's requests to a background worker, using the ",Object(i.b)("inlineCode",{parentName:"li"},"emit"),"\nkeyword. ",Object(i.b)("inlineCode",{parentName:"li"},"emit")," takes two arguments, and in this case we're sending\n",Object(i.b)("inlineCode",{parentName:"li"},"todayRequests")," to a not-yet-created worker named ",Object(i.b)("inlineCode",{parentName:"li"},"storeReport"),".")),Object(i.b)("p",null,Object(i.b)("img",Object(r.a)({parentName:"p"},{src:"assets/gettingstarted/emit.png",alt:"assets/gettingstarted/emit.png"}))),Object(i.b)("ol",{start:9},Object(i.b)("li",{parentName:"ol"},'To have our first report run, hit the "replay" button in the upper right of\nthe Cron. This creates a 404 in the sidebar for the Worker ',Object(i.b)("inlineCode",{parentName:"li"},"storeReport"),".")))}p.isMDXComponent=!0},243:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),p=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},b=function(e){var t=p(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),b=p(n),d=r,m=b["".concat(o,".").concat(d)]||b[d]||u[d]||i;return n?a.a.createElement(m,s(s({ref:t},l),{},{components:n})):a.a.createElement(m,s({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);