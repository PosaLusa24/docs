(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{178:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return r})),a.d(t,"metadata",(function(){return o})),a.d(t,"rightToc",(function(){return c})),a.d(t,"default",(function(){return p}));var n=a(2),s=a(11),i=(a(0),a(243)),r={id:"react-spa-tutorial",title:"React SPA tutorial",sidebar_label:"React SPA tutorial"},o={id:"tutorials/react-spa-tutorial",isDocsHomePage:!1,title:"React SPA tutorial",description:"Watch a demo video of this project:",source:"@site/docs/tutorials/react-spa-tutorial.md",permalink:"/docs/tutorials/react-spa-tutorial",sidebar_label:"React SPA tutorial",sidebar:"Tutorials",previous:{title:"Tutorials & Samples",permalink:"/docs/tutorials/tutorial-intro"},next:{title:"Twilio tutorial",permalink:"/docs/tutorials/twilio-app-tutorial"}},c=[{value:"Quick start",id:"quick-start",children:[]}],l={rightToc:c};function p(e){var t=e.components,a=Object(s.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},l,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Watch a demo video of this project:\n",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://vimeo.com/360007420/01c205fe0f"}),"https://vimeo.com/360007420/01c205fe0f")),Object(i.b)("h4",{id:"getting-started"},"Getting started"),Object(i.b)("p",null,"Dark allows you to build backends (API endpoints, workers, cron, and data\nstorage) by writing only your business logic, using production traces."),Object(i.b)("p",null,"You can access you canvas at darklang.com/a/USERNAME-CANVASNAME (we recommend\nUSERNAME-signin for this project)."),Object(i.b)("p",null,"First, on that canvas build a hello world API endpoint to get a feel for Dark:"),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"assets/reactspa/image15.gif",alt:"assets/reactspa/image15.gif"}))),Object(i.b)("p",null,"All the major handlers work the same way, but the key for many requests is\nworking directly with incoming data."),Object(i.b)("h4",{id:"this-guide---office-sign-in"},"This Guide - Office Sign-in"),Object(i.b)("p",null,"We\u2019re building this app:\n",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://sample-signin.builtwithdark.com/"}),"https://sample-signin.builtwithdark.com"),".\nIt\u2019s an ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/darklang/dark-signin"}),"Office Sign-in SPA"),", built in\nReact. From the form, you pick a host, announce your name as the visitor)."),Object(i.b)("p",null,"The application backend will have an API, data storage, and asynchronous\nbackground workers to talk to external APIs (Twilio & Slack). You will need\nTwilio & Slack tokens, which we explain how to get below during that portion of\nthe tutorial."),Object(i.b)("p",null,"Yours will live at\n",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://username-signin.builtwithdark.com/"}),"https://USERNAME-signin.builtwithdark.com"),";\nto work on it go to\n",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://darklang.com/a/USERNAME-signin"}),"https://darklang.com/a/USERNAME-signin"),"."),Object(i.b)("h3",{id:"quick-start"},"Quick start"),Object(i.b)("p",null,"We\u2019ll need some setup on your machine to upload the react app. Run these\ncommands on OSX to install. To read a longer version explaining what each of\nthese commands do, go here:"),Object(i.b)("p",null,Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/static-assets"}),"Hosting Static Assets in Dark")),Object(i.b)("p",null,"Note, replace anywhere that says USERNAME and PASSWORD with your Dark username\nand password."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"git clone https://github.com/darklang/dark-signin.git\ncd dark-signin\nnpm install\nnpm run build-for USERNAME-signin\nnpm run get-dark-cli\n./dark-cli-apple --canvas USERNAME-signin --user USERNAME --password PASSWORD build\n")),Object(i.b)("p",null,"If you get \u201cNot found\u201d on the last step, you\u2019ll need to visit\n",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://darklang.com/a/USERNAME-signin"}),"https://darklang.com/a/USERNAME-signin"),"\nfirst in your browser."),Object(i.b)("h4",{id:"serving-hosted-assets"},"Serving Hosted Assets"),Object(i.b)("p",null,"When you go back to Dark, your assets will be available (in this case, our\ncompiled Javascript application)."),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"assets/reactspa/image24.png",alt:"assets/reactspa/image24.png"}))),Object(i.b)("p",null,"Now, let\u2019s put the assets at the base of our API by creating a new route named\n",Object(i.b)("inlineCode",{parentName:"p"},"/")," from the omnibox, or the side bar:"),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"assets/reactspa/image22.png",alt:"assets/reactspa/image22.png"}))),Object(i.b)("p",null,"Once the route is created, we can specify it\u2019s a ",Object(i.b)("inlineCode",{parentName:"p"},"GET")," method, and start writing\ncode."),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"assets/reactspa/image2.png",alt:"assets/reactspa/image2.png"}))),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"assets/reactspa/image21.png",alt:"assets/reactspa/image21.png"}))),Object(i.b)("p",null,"The finished API will look like this, and you can open it from the hamburger on\nthe right (the tutorial copy is at\n",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://sample-signin.builtwithdark.com/"}),"https://sample-signin.builtwithdark.com/"),",\nand your copy is at USERNAME-signin.builtwithdark.com/)."),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"assets/reactspa/image4.png",alt:"assets/reactspa/image4.png"}))),Object(i.b)("p",null,"When you open the page it looks like this:"),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"assets/reactspa/image29.png",alt:"hassets/reactspa/image29.png"}))),Object(i.b)("h4",{id:"building-the-api---trace-driven-development"},"Building the API - Trace Driven Development"),Object(i.b)("p",null,"Now, we can build a backend based on the frontend we have. The react app has two\nrequirements:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"GET")," ",Object(i.b)("inlineCode",{parentName:"li"},"Hosts")," - Providing the list of available hosts."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"POST")," ",Object(i.b)("inlineCode",{parentName:"li"},"Visit")," - Checking in and triggering what needs to happen when a\nvisitor arrives.")),Object(i.b)("h4",{id:"setting-up-the-hosts-endpoint-api-datastore-repl"},"Setting Up the /hosts Endpoint (API, Datastore, REPL)"),Object(i.b)("p",null,"From Dark, we can see the failed request."),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"assets/reactspa/image3.png",alt:"assets/reactspa/image3.png"}))),Object(i.b)("p",null,"If you do not see a failed request, verify that your host URL in your frontend\nmatches where you\u2019ve hosted the application."),Object(i.b)("p",null,"Hit the ",Object(i.b)("inlineCode",{parentName:"p"},"+")," button to create the route. The route will have the trace from when\nwe opened the page."),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"assets/reactspa/image32.png",alt:"assets/reactspa/mage32.png"}))),Object(i.b)("p",null,"Now we have our endpoint (you can try it out by making a list\n",Object(i.b)("inlineCode",{parentName:"p"},'["name1", "name2"]')," and refreshing the React application:"),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"assets/reactspa/image1.png",alt:"assets/reactspa/image1.png"}))),Object(i.b)("p",null,"But for the longer term, we\u2019ll need other backend components (in particular a\ndatastore) to support the endpoint."),Object(i.b)("p",null,"Create a datastore which lists all hosts. We can create it from the omnibox or\nthe left side bar, and rename it. We can also choose other parameters. In this\ncase, I\u2019ve chosen phone numbers and Slack IDs to send texts and DMs."),Object(i.b)("p",null,"Datastores in Dark are key-value based, not relational. This tutorial will\ninclude step by step instructions, but more information on datastores is\navailable ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/dark-backend-components#persistent-datastores"}),"here"),"."),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"assets/reactspa/image7.png",alt:"assets/reactspa/image7.png"}))),Object(i.b)("p",null,"We can add data to the datastore by using a REPL, an internal tool for the\napplication."),Object(i.b)("p",null,"We can name the REPL (or it will have a default adjective-animal name) and then"),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"assets/reactspa/image6.png",alt:"assets/reactspa/image6.png"}))),Object(i.b)("p",null,"When we write ",Object(i.b)("inlineCode",{parentName:"p"},"DB::set")," into the handler, we\u2019re given three parameters for the\nexpression. The value, the unique identifier for the record, and the table."),Object(i.b)("p",null,"Here\u2019s the finished REPL:"),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"assets/reactspa/image14.png",alt:"assets/reactspa/image14.png"}))),Object(i.b)("p",null,"In this case, I chose to define ",Object(i.b)("inlineCode",{parentName:"p"},"slackid")," as a variable so I could reuse it as a\nunique key. You can do this after the fact using ",Object(i.b)("inlineCode",{parentName:"p"},"Cmd/Ctrl-\\")," on the value to\nextract a variable, or just rewrite starting from the top."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Please do not use Ellen\u2019s phone number + Slack ID for this, because then you\nwon\u2019t get the interactivity!")," Use your own name, phone number, and Slack ID.\nYour Slack ID is found in your profile in the \u2026 menu. You will need permission\nto install Slack apps on a Slack to do this."),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"assets/reactspa/image34.png",alt:"assets/reactspa/image34.png"}))),Object(i.b)("p",null,"Press the \u201cplay\u201d button to insert the value into the datastore\n(",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.google.com/document/d/15u_iXi5FZXPX-hn71NqMH8vMLfNQMw3NMD8EOui3m2g/edit?folder=0AJNj3YlxhMcIUk9PVA#heading=h.582o5mgjxu9a"}),"more on interactivity with play buttons"),")."),Object(i.b)("p",null,"After this, when I select my datastore, I will see that it has locked and has a\nconnection to the REPL, and the number of items/most recent item (if you do not\nsee the DB stats on the left, refreshing the tab should work)."),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"assets/reactspa/image19.png",alt:"assets/reactspa/image19.png"}))),Object(i.b)("p",null,"Then, you can update the hosts API to use our data storage."),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"assets/reactspa/image5.png",alt:"assets/reactspa/image5.png"}))),Object(i.b)("p",null,"In this case we did a ",Object(i.b)("inlineCode",{parentName:"p"},"DB::getAll")," hosts (and played the request). Then, we took\nthat result (a list of objects) and passed it as a parameter into ",Object(i.b)("inlineCode",{parentName:"p"},"List::map"),",\nthen took the name for each host."),Object(i.b)("p",null,"To see how this works, click first on ",Object(i.b)("inlineCode",{parentName:"p"},"DB::getAll")," to see the list of objects,\nthen click on ",Object(i.b)("inlineCode",{parentName:"p"},"\\val")," to see an example object, and then ",Object(i.b)("inlineCode",{parentName:"p"},"val.name")," will show you\nthe ",Object(i.b)("inlineCode",{parentName:"p"},"name")," field. ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/functional-aspects"}),"Functional aspects of Dark")," has more\ninformation on pipelines and maps, but for the tutorial copying this code will\nwork."),Object(i.b)("p",null,"If you are stuck:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Make sure to hit the play button for ",Object(i.b)("inlineCode",{parentName:"li"},"DB::getAll")," so you\u2019ll have real data."),Object(i.b)("li",{parentName:"ol"},"Shift-enter or ",Object(i.b)("inlineCode",{parentName:"li"},"|>")," will open the pipeline."),Object(i.b)("li",{parentName:"ol"},"Typing ",Object(i.b)("inlineCode",{parentName:"li"},"\\")," in the ",Object(i.b)("inlineCode",{parentName:"li"},"block")," field will open the ",Object(i.b)("inlineCode",{parentName:"li"},"\\val")," operator.")),Object(i.b)("h4",{id:"setting-up-the-visits-endpoint-api-datastore-workers"},"Setting up the /visits Endpoint (API, Datastore, Workers)"),Object(i.b)("p",null,"First, we do the same thing and go back to our React application, select a host,\nthen type in a visitor name and hit the \u201csign in\u201d button. This will result in\nanother 404 that we can create, and see the trace for."),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"assets/reactspa/image26.png",alt:"assets/reactspa/image26.png"}))),Object(i.b)("p",null,"First, we\u2019ll store the visit in a datastore as we did from the REPL when\ncreating hosts. Like before, we can create a new datastore, and then use the\n",Object(i.b)("inlineCode",{parentName:"p"},"DB::set")," expression."),Object(i.b)("p",null,"If we match the datastore schema to our incoming request body, we can do it like\nthis:"),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"assets/reactspa/image17.png",alt:"assets/reactspa/image17.png"}))),Object(i.b)("p",null,"If our schema does not match exactly, we can still use our incoming request.\nHere\u2019s a version that also stores the time of the visit:"),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"assets/reactspa/image28.png",alt:"assets/reactspa/mage28.png"}))),Object(i.b)("p",null,"In either case, taking advantage of live values and traces is very helpful. When\nour cursor is in host, we can see what the trace evaluates to for that value on\nthe left-hand side:"),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"assets/reactspa/image9.png",alt:"assets/reactspa/image9.png"}))),Object(i.b)("p",null,"Then, as before, we can run the outstanding functions and insert this trace into\nour datastore (in this case, we\u2019re building from this specific trace. In the\nfuture, when a new sign in happened, this handler would run at that time)."),Object(i.b)("p",null,"If you\u2019re having trouble, make sure you\u2019ve hit the play buttons and do not have\nred underlines. The finished handler & datastore once you\u2019ve run and inserted\nthe visit will look like this:"),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"assets/reactspa/image23.png",alt:"assets/reactspa/image23.png"}))),Object(i.b)("h4",{id:"background-workers--external-api-connections"},"Background Workers & External API connections"),Object(i.b)("p",null,"For this section you will need a Twilio SID & Token and/or a Slack Token,\ndepending on if you want to send Texts, DMs, or both."),Object(i.b)("h4",{id:"twilio"},"Twilio"),Object(i.b)("p",null,"To create a new ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://twilio.com/"}),"Twilio account"),", the SID & Token are in\nyour console on the right hand side."),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"assets/reactspa/image11.png",alt:"assets/reactspa/image11.png"}))),Object(i.b)("p",null,"Once you have an account, you\u2019ll need a number that can send texts,\n",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.twilio.com/console/phone-numbers/incoming"}),"https://www.twilio.com/console/phone-numbers/incoming"),"."),Object(i.b)("h4",{id:"slack"},"Slack"),Object(i.b)("p",null,"To create a Slack token, go to ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://slack.com/api"}),"https://slack.com/api"),',\ncreate a new application, add a bot from the \u201cbasic information\u201d add features &\nfunctionality section, and install the app in your workspace. After doing so,\nyou\u2019ll get two tokens back, one of which is the format "xoxb-',"*",'".'),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"assets/reactspa/image33.png",alt:"assets/reactspa/image33.png"}))),Object(i.b)("h4",{id:"twilio-text-message-integration"},"Twilio Text Message Integration"),Object(i.b)("p",null,"Back in our post visits handler, hit enter at the end of the line to write more\ncode (This converts our ",Object(i.b)("inlineCode",{parentName:"p"},"DB::set")," action into a statement. Not necessary reading\nnow, but more on implicit returns is in the\n",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/functional-aspects"}),"functional aspects of Dark"),")."),Object(i.b)("p",null,"To send information to be used asynchronously (like for API calls) we can use\nthe keyword emit to emit to an async background worker with a queue."),Object(i.b)("p",null,"Here, we emit the ",Object(i.b)("inlineCode",{parentName:"p"},"request.body")," (seen in a live value on the left) to a worker\nnamed ",Object(i.b)("inlineCode",{parentName:"p"},"sendText"),". Hitting play will create a 404 for that worker, much like how\nwe created our visit and host endpoints."),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"assets/reactspa/image30.png",alt:"assets/reactspa/image30.png"}))),Object(i.b)("p",null,"When created, the worker will have the event information as a trace:"),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"assets/reactspa/image10.png",alt:"assets/reactspa/image10.png"}))),Object(i.b)("p",null,"For this worker, we need to get the host\u2019s phone number and then send them a\ntext. This is very similar to the code we wrote before to get the host\u2019s name."),Object(i.b)("p",null,"In this case we use ",Object(i.b)("inlineCode",{parentName:"p"},"DB::queryOne")," to get only one response, and look by\n",Object(i.b)("inlineCode",{parentName:"p"},"hostname"),". Then we can play the query, and make a variable for the field."),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"assets/reactspa/image12.png",alt:"assets/reactspa/image12.png"}))),Object(i.b)("p",null,"The last step is adding the ",Object(i.b)("inlineCode",{parentName:"p"},"Twilio::sendText")," function, which takes five\nparameters. The ",Object(i.b)("inlineCode",{parentName:"p"},"SID"),", ",Object(i.b)("inlineCode",{parentName:"p"},"Token"),", and ",Object(i.b)("inlineCode",{parentName:"p"},"number")," you got from Twilio, the\n",Object(i.b)("inlineCode",{parentName:"p"},"hostphone")," above, and the message you\u2019d like to send."),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"assets/reactspa/image20.png",alt:"assets/reactspa/image20.png"}))),Object(i.b)("p",null,"When you\u2019ve added yours, it will look like this (but with your tokens)."),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"assets/reactspa/image18.png",alt:"assets/reactspa/image18.png"}))),Object(i.b)("p",null,"When you hit \u201cplay\u201d on ",Object(i.b)("inlineCode",{parentName:"p"},"sendText"),", you will be able to see the API response as a\nlive value, and should receive a text message."),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"assets/reactspa/image27.png",alt:"assets/reactspa/image27.png"}))),Object(i.b)("h4",{id:"slack-dm-integration"},"Slack DM Integration"),Object(i.b)("p",null,"We go back to our ",Object(i.b)("inlineCode",{parentName:"p"},"/visit")," endpoint to add the Slack worker. We can even copy\nmost of the code from the beginning of the Twilio handler to get our Slack ID."),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"assets/reactspa/image8.png",alt:"assets/reactspa/image8.png"}))),Object(i.b)("p",null,"For this, we\u2019ll be using Slack\u2019s\n",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://api.slack.com/methods/chat.postMessage"}),Object(i.b)("inlineCode",{parentName:"a"},"chat.postMessage")," API method"),",\nwhich requires the method URL:\n",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://slack.com/api/chat.postMessage"}),"https://slack.com/api/chat.postMessage"),"\nand pass a header with a content type and a token."),Object(i.b)("p",null,"There are built in methods for formatting headers in the HttpClient library."),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"assets/reactspa/image31.png",alt:"assets/reactspa/image31.png"}))),Object(i.b)("p",null,"Finally, we have to make the post request, which takes four parameters,\nincluding a body."),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"assets/reactspa/image25.png",alt:"assets/reactspa/image25.png"}))),Object(i.b)("p",null,"You can fill them in as follows from the above code:"),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"assets/reactspa/image13.png",alt:"assets/reactspa/image13.png"}))),Object(i.b)("p",null,"When you hit play, you should receive a DM from your Slackbot, as well as an\ninline API response."),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"assets/reactspa/image16.png",alt:"assets/reactspa/image16.png"}))),Object(i.b)("p",null,"If it isn\u2019t working, check that all parameters (including ",Object(i.b)("inlineCode",{parentName:"p"},"{}")," in the query\nfield) are correct, and read the API response message to debug."),Object(i.b)("h4",{id:"thats-it"},"That\u2019s it!"),Object(i.b)("p",null,"Now you should have a working React application with an API, persistent data\nstorage, and asynchronous background workers, hosted at\n",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://username-signin.builtwithdark.com/"}),"https://username-signin.builtwithdark.com"),".\nWhen you go back to your React app and submit a new visit, you should receive\nboth a Slack and a Text."),Object(i.b)("p",null,"(Interested more in Slack apps? We have ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/slack-app-tutorial"}),"a guide")," for\nthat!)"))}p.isMDXComponent=!0},243:function(e,t,a){"use strict";a.d(t,"a",(function(){return b})),a.d(t,"b",(function(){return m}));var n=a(0),s=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,s=function(e,t){if(null==e)return{};var a,n,s={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var l=s.a.createContext({}),p=function(e){var t=s.a.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},b=function(e){var t=p(e.components);return s.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return s.a.createElement(s.a.Fragment,{},t)}},h=s.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,r=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),b=p(a),h=n,m=b["".concat(r,".").concat(h)]||b[h]||u[h]||i;return a?s.a.createElement(m,o(o({ref:t},l),{},{components:a})):s.a.createElement(m,o({ref:t},l))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,r=new Array(i);r[0]=h;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:n,r[1]=o;for(var l=2;l<i;l++)r[l]=a[l];return s.a.createElement.apply(null,r)}return s.a.createElement.apply(null,a)}h.displayName="MDXCreateElement"}}]);